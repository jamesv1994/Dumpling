name: Deploy Apache Airflow DAGs
on:
  push:
    branches: [dev]

  # Manual workflow execution for testing
  workflow_dispatch:

jobs:
  deploy_airflow_dags:
    runs-on: ubuntu-latest
    env: 
      GITHUB_HASH_LOCATION: /appdata/hashes/airflow_dags/additional_files_dev
      TEMP_LOCATION_CHANGED_FILES: /tmp/airflow_depl/
      ANSIBLE_CHECKOUT_LOCATION: /appdata/github/n2125168/automation/


    steps:
      # Get the latest revision
      - uses: actions/checkout@v2

      - name: retrieve last deployed hash for diff
        id: retrieve_last_hash
        run: |
          echo "::set-output name=last_hash::$(cat $GITHUB_HASH_LOCATION 2>/dev/null || echo $(git hash-object -t tree /dev/null))"
      - name: get changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ steps.retrieve_last_hash.outputs.last_hash }} $GITHUB_SHA dags | xargs)"
      - name: echo the output
        run: echo ${{ steps.getfile.outputs.files }}

      - name: Verify no prod deployment
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo NO PROD DEPLOYMENTS SUPPORTED; exit 1;

      
      # # Exeuction of _schema_db2_deploy.yml Ansible playbook, so that we always have the correct python scripts deployed
      # - name: Execute the _schema_db2_deploy.yml  
      #   run: "/appdata/python_venv/pkg_management_v0.1/bin/activate && cd /appdata/github/automation/"

      - name: "Make sure depl temp dir exists"
        run: "echo mkdir -p $TEMP_LOCATION_CHANGED_FILES"

      - name: "Copy over the files to depl temp dir"
        run: "echo cp ${{ steps.getfile.outputs.files }} $TEMP_LOCATION_CHANGED_FILES"

      - name: Deploy DAG Files onto server using Ansible Playbook
        run: |
          # environment=$(echo $GITHUB_REF | awk -F'/' '{print $NF}');
          # For now hardcoding to DEV
          environment=dev 
          # echo "activating Ansible VENV"; 
          source /appdata/python_venv/pkg_management_v0.1/bin/activate
          echo "Executing Playbook";
          ansible-playbook $ANSIBLE_CHECKOUT_LOCATION/airflow_deploy_dags_github_runner.yml -i $ANSIBLE_CHECKOUT_LOCATION/inventories/server.yaml -e "dag_src=$TEMP_LOCATION_CHANGED_FILES/ airflow_environment=$environment";
      # Make sure, that no other location will be removed!
      - name: "Clear out the depl temp dir"
        run: "echo rm -rf $TEMP_LOCATION_CHANGED_FILES/*"
        if: ${{ env.TEMP_LOCATION_CHANGED_FILES == '/tmp/airflow_depl/' }}

      - name: Create the hash-directory (if not exists)
        run: echo mkdir -p $(dirname $GITHUB_HASH_LOCATION)

      - name: Set new Hash for delta-deployments
        run: echo $GITHUB_SHA > $GITHUB_HASH_LOCATION
